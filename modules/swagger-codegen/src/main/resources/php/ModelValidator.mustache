<?php
/**
 * ModelValidator
 *
 * PHP version 5
 *
 * @category Class
 * @package  {{invokerPackage}}
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

{{>partial_header}}
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace {{invokerPackage}};

/**
 * ModelValidator Class Doc Comment
 *
 * @category Class
 * @package  {{invokerPackage}}
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ModelValidator
{

    /**
     * @param ModelInterface $object
     * @return mixed
     */
	public function validateRecursively($object)
    {
        foreach ($object::swaggerTypes() as $field => $className) {
            if ($className === '\DateTime') {
                continue;
            }

            if (class_exists(str_replace('[]', '', $className))) {
                $method = $object->getters()[$field];

                $subclass = $object->{$method}();
                if (is_object($subclass)) {
                    $subclass = [$subclass];
                }

                if (is_null($subclass)) {
                    continue;
                }

                /** @var ModelInterface[] $subclass */
                foreach ($subclass as $newObject) {
                    if (!$this->validateRecursively($newObject)) {
                        $invalidProperties = $newObject->listInvalidProperties();
                        if ($invalidProperties) {
                            $this->validationErrors[$newObject->getModelName()] = $invalidProperties;
                        }
                        return false;
                    }
                }
            }
        }

        $isValid = $object->valid();
        $invalidProperties = $object->listInvalidProperties();
        if ($invalidProperties) {
            $this->validationErrors[$object->getModelName()] = $invalidProperties;
        }

        return $isValid;
    }
}